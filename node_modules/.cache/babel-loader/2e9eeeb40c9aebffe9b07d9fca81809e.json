{"ast":null,"code":"var _jsxFileName = \"/Users/emmafields/Documents/Coding/CFG_Degree/Specialisation/project/fullstack-flamingos/squeeze/src/components/Modal/PodcastJourney.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./Modal.css\";\nimport { useState } from \"react\";\nimport GenreModal from \"./GenreModal\";\nimport TimeModal from \"./TimeModal\";\nimport RecommendationModal from \"./RecommendationModal\"; // screen to link all modals together in the podcast selection\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PodcastJourney(props) {\n  _s();\n\n  const [screen, setScreen] = useState(1);\n  const [journeyValue, setJourneyValues] = useState({}); // Function to determine the next 'value' modal once one has been opened\n  // Values are assigned to Call-to-action buttons on modals\n\n  function nextScreen(screenValue) {\n    setScreen(current => current + 1);\n    setJourneyValues(previous => ({ ...previous,\n      ...screenValue\n    }));\n  } // Function to determine when modal is to be closed\n  // Assigned to close buttons on modals\n  // The default for button will be reset back to 'login'\n\n\n  function closeModal() {\n    setScreen(1);\n    props.onClose();\n  } // to do nothing if there is no open prop passed\n\n\n  if (!props.open) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [screen === 1 && /*#__PURE__*/_jsxDEV(GenreModal, {\n      nextScreen: nextScreen,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 30\n    }, this), screen === 2 && /*#__PURE__*/_jsxDEV(TimeModal, {\n      nextScreen: nextScreen,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 30\n    }, this), screen === 3 && /*#__PURE__*/_jsxDEV(RecommendationModal, {\n      newSearch: setScreen,\n      searchValues: journeyValue,\n      nextScreen: nextScreen,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PodcastJourney, \"F1GOpnpN09TIJzd/x0JE2jxYuvU=\");\n\n_c = PodcastJourney;\nexport default PodcastJourney;\n\nvar _c;\n\n$RefreshReg$(_c, \"PodcastJourney\");","map":{"version":3,"names":["useState","GenreModal","TimeModal","RecommendationModal","PodcastJourney","props","screen","setScreen","journeyValue","setJourneyValues","nextScreen","screenValue","current","previous","closeModal","onClose","open"],"sources":["/Users/emmafields/Documents/Coding/CFG_Degree/Specialisation/project/fullstack-flamingos/squeeze/src/components/Modal/PodcastJourney.jsx"],"sourcesContent":["import \"./Modal.css\";\nimport { useState } from \"react\";\nimport GenreModal from \"./GenreModal\";\nimport TimeModal from \"./TimeModal\";\nimport RecommendationModal from \"./RecommendationModal\";\n\n// screen to link all modals together in the podcast selection\n\nfunction PodcastJourney(props) {\n    \n    const [screen, setScreen] = useState(1)\n    const [journeyValue, setJourneyValues] = useState({})\n\n    // Function to determine the next 'value' modal once one has been opened\n    // Values are assigned to Call-to-action buttons on modals\n    function nextScreen(screenValue) {\n        setScreen(current => current + 1)\n        setJourneyValues(previous => ({ ...previous, ...screenValue }))\n    }\n\n    // Function to determine when modal is to be closed\n    // Assigned to close buttons on modals\n    // The default for button will be reset back to 'login'\n    function closeModal() {\n        setScreen(1);\n        props.onClose();\n    }\n\n    // to do nothing if there is no open prop passed\n    if (!props.open)\n        return null\n\n    return (\n        <>\n            {/* Each modal is assigned a value for 'screen' \n            which is passed from the modals to journey for call-to-action buttons */}\n\n            {screen === 1 && <GenreModal nextScreen={nextScreen} onClose={closeModal} />}\n            {screen === 2 && <TimeModal nextScreen={nextScreen} onClose={closeModal} />}\n            {screen === 3 && <RecommendationModal newSearch={setScreen} searchValues={journeyValue} nextScreen={nextScreen} onClose={closeModal} />}\n\n        </>\n    )\n}\n\nexport default PodcastJourney;"],"mappings":";;;AAAA,OAAO,aAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC,C,CAEA;;;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;EAAA;;EAE3B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,CAAD,CAApC;EACA,MAAM,CAACQ,YAAD,EAAeC,gBAAf,IAAmCT,QAAQ,CAAC,EAAD,CAAjD,CAH2B,CAK3B;EACA;;EACA,SAASU,UAAT,CAAoBC,WAApB,EAAiC;IAC7BJ,SAAS,CAACK,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAT;IACAH,gBAAgB,CAACI,QAAQ,KAAK,EAAE,GAAGA,QAAL;MAAe,GAAGF;IAAlB,CAAL,CAAT,CAAhB;EACH,CAV0B,CAY3B;EACA;EACA;;;EACA,SAASG,UAAT,GAAsB;IAClBP,SAAS,CAAC,CAAD,CAAT;IACAF,KAAK,CAACU,OAAN;EACH,CAlB0B,CAoB3B;;;EACA,IAAI,CAACV,KAAK,CAACW,IAAX,EACI,OAAO,IAAP;EAEJ,oBACI;IAAA,WAIKV,MAAM,KAAK,CAAX,iBAAgB,QAAC,UAAD;MAAY,UAAU,EAAEI,UAAxB;MAAoC,OAAO,EAAEI;IAA7C;MAAA;MAAA;MAAA;IAAA,QAJrB,EAKKR,MAAM,KAAK,CAAX,iBAAgB,QAAC,SAAD;MAAW,UAAU,EAAEI,UAAvB;MAAmC,OAAO,EAAEI;IAA5C;MAAA;MAAA;MAAA;IAAA,QALrB,EAMKR,MAAM,KAAK,CAAX,iBAAgB,QAAC,mBAAD;MAAqB,SAAS,EAAEC,SAAhC;MAA2C,YAAY,EAAEC,YAAzD;MAAuE,UAAU,EAAEE,UAAnF;MAA+F,OAAO,EAAEI;IAAxG;MAAA;MAAA;MAAA;IAAA,QANrB;EAAA,gBADJ;AAWH;;GAnCQV,c;;KAAAA,c;AAqCT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}