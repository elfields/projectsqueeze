{"ast":null,"code":"var _jsxFileName = \"/Users/emmafields/Documents/Coding/CFG_Degree/Specialisation/project/fullstack-flamingos/squeeze/src/components/GenreButton/GenreButton.jsx\",\n    _s = $RefreshSig$();\n\nimport './GenreButton.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GenreButton(_ref) {\n  _s();\n\n  let {\n    id,\n    onClick,\n    title,\n    disabled\n  } = _ref;\n  const [isActive, setIsActive] = useState(false); // Obtaining Genre ID from buttons once selected to feed into API\n\n  const handleClick = () => {\n    setIsActive(current => !current);\n    onClick(id, isActive);\n  };\n\n  return (\n    /*#__PURE__*/\n    // button title is passed via the Genre Modal\n    _jsxDEV(\"button\", {\n      className: `genre-button ${isActive ? `genre-button--checked` : ``}`,\n      onClick: handleClick,\n      disabled: disabled,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(GenreButton, \"OFRYOMGmWDzfQ4dzLF00ag1mHo0=\");\n\n_c = GenreButton;\nexport default GenreButton; // Part of Toggle All and disable buttons\n// import './GenreButton.css';\n// function GenreButton(props) {\n//       return (\n//         <>\n//           <button id={ props.id } disabled={props.isMaxed} className={`genrebutton ${props.isSelected(props.genrebuttontitle) ? `genrebutton--checked` : ``}`}\n//           onClick={() => props.toggle(props.genrebuttontitle)}>{ props.genrebuttontitle }</button>\n//         </>\n//       );\n// }\n// export default GenreButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenreButton\");","map":{"version":3,"names":["React","useState","GenreButton","id","onClick","title","disabled","isActive","setIsActive","handleClick","current"],"sources":["/Users/emmafields/Documents/Coding/CFG_Degree/Specialisation/project/fullstack-flamingos/squeeze/src/components/GenreButton/GenreButton.jsx"],"sourcesContent":["import './GenreButton.css';\nimport React, { useState } from 'react';\n\n\nfunction GenreButton({ id, onClick, title, disabled }) {\n    const [isActive, setIsActive] = useState(false);\n\n    // Obtaining Genre ID from buttons once selected to feed into API\n    const handleClick = () => {\n        setIsActive(current => !current)\n        onClick(id, isActive);\n    };\n\n    return (\n\n        // button title is passed via the Genre Modal\n        <button\n            className={`genre-button ${isActive ? `genre-button--checked` : ``}`}\n            onClick={handleClick} disabled={disabled}\n        >\n\n            {title}\n        </button>\n\n    );\n}\n\nexport default GenreButton;\n\n\n\n\n\n// Part of Toggle All and disable buttons\n\n// import './GenreButton.css';\n\n// function GenreButton(props) {\n//       return (\n//         <>\n//           <button id={ props.id } disabled={props.isMaxed} className={`genrebutton ${props.isSelected(props.genrebuttontitle) ? `genrebutton--checked` : ``}`}\n//           onClick={() => props.toggle(props.genrebuttontitle)}>{ props.genrebuttontitle }</button>\n//         </>\n//       );\n// }\n\n// export default GenreButton;"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,SAASC,WAAT,OAAuD;EAAA;;EAAA,IAAlC;IAAEC,EAAF;IAAMC,OAAN;IAAeC,KAAf;IAAsBC;EAAtB,CAAkC;EACnD,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC,CADmD,CAGnD;;EACA,MAAMQ,WAAW,GAAG,MAAM;IACtBD,WAAW,CAACE,OAAO,IAAI,CAACA,OAAb,CAAX;IACAN,OAAO,CAACD,EAAD,EAAKI,QAAL,CAAP;EACH,CAHD;;EAKA;IAAA;IAEI;IACA;MACI,SAAS,EAAG,gBAAeA,QAAQ,GAAI,uBAAJ,GAA8B,EAAE,EADvE;MAEI,OAAO,EAAEE,WAFb;MAE0B,QAAQ,EAAEH,QAFpC;MAAA,UAKKD;IALL;MAAA;MAAA;MAAA;IAAA;EAHJ;AAYH;;GArBQH,W;;KAAAA,W;AAuBT,eAAeA,WAAf,C,CAMA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}