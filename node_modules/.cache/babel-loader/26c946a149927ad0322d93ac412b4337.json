{"ast":null,"code":"var _jsxFileName = \"/Users/emmafields/Documents/Coding/CFG_Degree/Specialisation/project/fullstack-flamingos/squeeze/src/components/Modal/PodcastSelectModals/GenreModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ToggleSwitch from \"../../ToggleSwitch/ToggleSwitch\";\nimport GenreButton from \"../../GenreButton/GenreButton\";\nimport BaseModal from \"../BaseModals/BaseModal\"; // Linking the Genre options to their relevant ID in the API data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genreButtons = [{\n  id: 88,\n  title: \"Health\"\n}, {\n  id: 134,\n  title: \"Music\"\n}, {\n  id: 135,\n  title: \"True Crime\"\n}, {\n  id: 133,\n  title: \"Comedy\"\n}, {\n  id: 68,\n  title: \"TV / Film\"\n}, {\n  id: 111,\n  title: \"Education\"\n}, {\n  id: 107,\n  title: \"Science\"\n}, {\n  id: 99,\n  title: \"News\"\n}, {\n  id: 168,\n  title: \"Fiction\"\n}]; // Limits the selection to only 3 categories\n\nfunction shouldToggleGenre(currentSelectedGenres, newId) {\n  if (currentSelectedGenres.includes(newId)) {\n    return currentSelectedGenres.filter(genre => genre !== newId);\n  }\n\n  if (currentSelectedGenres.length >= 3) {\n    return currentSelectedGenres;\n  }\n\n  return [...currentSelectedGenres, newId];\n}\n\nconst GenreModal = _ref => {\n  _s();\n\n  let {\n    nextScreen,\n    onClose\n  } = _ref;\n  const [genres, setGenres] = useState([]);\n  const [isAnyCategory, setIsAnyCategory] = useState(false);\n\n  const onChangeIsAnyCategory = () => setIsAnyCategory(!isAnyCategory); // Function setup to pass Genre ID's for selected buttons over to API call\n\n\n  function toggleGenre(genreId) {\n    setGenres(currentSelectedGenres => shouldToggleGenre(currentSelectedGenres, genreId));\n  } // Handling communication between modal screens\n\n\n  function handleSubmit() {\n    if (isAnyCategory) {\n      return nextScreen({\n        genres: []\n      });\n    }\n\n    nextScreen({\n      genres\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(BaseModal, {\n    title: \"Select your preferred category:\",\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genre-toggle-container\",\n      children: /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n        label: \"Any category\",\n        onToggle: onChangeIsAnyCategory,\n        value: isAnyCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"choose-genre\",\n      children: \"Or you can choose up to 3 categories:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"genre-button-container\",\n      children: genreButtons.map(_ref2 => {\n        let {\n          id,\n          title\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(GenreButton, {\n          onClick: toggleGenre,\n          id: id,\n          title: title,\n          disabled: isAnyCategory,\n          isActive: genres.includes(id),\n          maxSelected: genres.length >= 3\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: handleSubmit,\n      className: \"button\",\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GenreModal, \"i8NmoRh2LzmUqM3IfBcx4TpSNFs=\");\n\n_c = GenreModal;\nexport default GenreModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenreModal\");","map":{"version":3,"names":["React","useState","ToggleSwitch","GenreButton","BaseModal","genreButtons","id","title","shouldToggleGenre","currentSelectedGenres","newId","includes","filter","genre","length","GenreModal","nextScreen","onClose","genres","setGenres","isAnyCategory","setIsAnyCategory","onChangeIsAnyCategory","toggleGenre","genreId","handleSubmit","map"],"sources":["/Users/emmafields/Documents/Coding/CFG_Degree/Specialisation/project/fullstack-flamingos/squeeze/src/components/Modal/PodcastSelectModals/GenreModal.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport ToggleSwitch from \"../../ToggleSwitch/ToggleSwitch\";\nimport GenreButton from \"../../GenreButton/GenreButton\";\nimport BaseModal from \"../BaseModals/BaseModal\";\n\n// Linking the Genre options to their relevant ID in the API data\nconst genreButtons = [\n    { id: 88, title: \"Health\" },\n    { id: 134, title: \"Music\" },\n    { id: 135, title: \"True Crime\" },\n    { id: 133, title: \"Comedy\" },\n    { id: 68, title: \"TV / Film\" },\n    { id: 111, title: \"Education\" },\n    { id: 107, title: \"Science\" },\n    { id: 99, title: \"News\" },\n    { id: 168, title: \"Fiction\" }\n];\n\n// Limits the selection to only 3 categories\nfunction shouldToggleGenre(currentSelectedGenres, newId) {\n    if (currentSelectedGenres.includes(newId)) {\n        return currentSelectedGenres.filter(genre => genre !== newId)\n    }\n    if (currentSelectedGenres.length >= 3) {\n        return currentSelectedGenres;\n    }\n    return [...currentSelectedGenres, newId]\n}\n\nconst GenreModal = ({ nextScreen, onClose }) => {\n    const [genres, setGenres] = useState([])\n    const [isAnyCategory, setIsAnyCategory] = useState(false);\n\n    const onChangeIsAnyCategory = () => setIsAnyCategory(!isAnyCategory);\n\n    // Function setup to pass Genre ID's for selected buttons over to API call\n    function toggleGenre(genreId) {\n        setGenres((currentSelectedGenres) => shouldToggleGenre(currentSelectedGenres, genreId))\n    }\n\n    // Handling communication between modal screens\n    function handleSubmit() {\n        if (isAnyCategory) {\n            return nextScreen({ genres: [] })\n        }\n        nextScreen({ genres })\n    }\n\n    return (\n        <BaseModal title='Select your preferred category:' onClose={onClose}>\n            {/* If toggled, all buttons are disabled */}\n            <div className='genre-toggle-container'>\n                <ToggleSwitch\n                    label=\"Any category\"\n                    onToggle={onChangeIsAnyCategory}\n                    value={isAnyCategory}\n                />\n            </div>\n            <p id='choose-genre'>\n                Or you can choose up to 3 categories:\n            </p>\n            {/* Genre buttons which then feed into the Podcast Recommendation Screen */}\n            <div className='genre-button-container'>\n                {genreButtons.map(({ id, title }) => (\n                    <GenreButton\n                        key={id}\n                        onClick={toggleGenre}\n                        id={id}\n                        title={title}\n                        disabled={isAnyCategory}\n                        isActive={genres.includes(id)}\n                        maxSelected={genres.length >= 3}\n                    />\n                ))}\n            </div>\n            {/* Button which leads user from Genre to Time selection modal */}\n            <button\n                type=\"submit\"\n                onClick={handleSubmit}\n                className=\"button\"\n            >\n                Next\n            </button>\n        </BaseModal>\n\n    )\n}\nexport default GenreModal;"],"mappings":"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"},"metadata":{},"sourceType":"module"}