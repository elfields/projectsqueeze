{"ast":null,"code":"var _jsxFileName = \"/Users/emmafields/Documents/Coding/CFG_Degree/Specialisation/project/fullstack-flamingos/squeeze/src/components/CarouselHome/Carousel.js\",\n    _s = $RefreshSig$();\n\nimport { Carousel } from 'bootstrap';\nimport React from 'react';\nimport './Carousel.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CarouselItem = _ref => {\n  let {\n    children,\n    width\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel-item\",\n    style: {\n      width: width\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = CarouselItem;\n\nfunction PodcastCarousel(_ref2) {\n  _s();\n\n  let {\n    children\n  } = _ref2;\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  const updateIndex = newIndex => {\n    if (newIndex < 0) {\n      newIndex = 0;\n    } else if (newIndex >= React.Children.count(children)) {\n      newIndex = React.Children.count(children) - 1;\n    }\n\n    setActiveIndex(newIndex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      style: {\n        transform: `translateX(-${activeIndex * 100}%)`\n      },\n      children: React.Children.map(children, (child, index) => {\n        return /*#__PURE__*/React.cloneElement(child, {\n          width: \"33%\"\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indicators\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          updateIndex(activeIndex - 1);\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), React.Children.map(children, (child, index) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            updateIndex(index);\n          },\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          updateIndex(activeIndex + 1);\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PodcastCarousel, \"rd+5N/MkYjuYD0I+B+MlySxQysU=\");\n\n_c2 = PodcastCarousel;\n;\nexport default PodcastCarousel; // const Sliders = ()=>{\n//     const settings = {\n//         lazyload: true,\n//         dots: true,\n//         infinite: true,\n//         speed: 500,\n//         slidesToShow: 3,\n//         slidesToScroll: 1, \n//         initialSlide: 2,\n//         autoplay: true,\n//         speed: 2000, \n//         autoplaySpeed: 2000, \n//         ccsEase: \"linear\"\n//       };\n//     const posts = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n//     const style={\n//         width: \"20rem\"\n//         };\n//     return (\n//         <div className = \"container\">\n//             <div style = {{marginTop: \"20px\"}}>\n//                 <Slider {...settings}>\n//                     {posts.map((index)=>{\n//                         return (\n//                             <div> \n//                                 <Card style={style}>\n//                                     <Card.Img variant=\"top\" src=\"./assets/download.svg\" />\n//                                     <Card.Body>\n//                                         <Card.Title>Podcast Title{index}</Card.Title>\n//                                         <Card.Subtitle>Author</Card.Subtitle>\n//                                         <Card.Text>\n//                                             Description text for the podcast. \n//                                         </Card.Text>\n//                                         <Button variant=\"primary\">Listen</Button>\n//                                         <Button variant=\"primary\">Follow</Button>\n//                                     </Card.Body>\n//                                 </Card>\n//                             </div>\n//                         );\n//                     })}      \n//                 </Slider>\n//             </div>\n//         </div>\n//     );\n// }\n// export default Sliders; \n// import React from 'react'; \n// import Slider from \"react-slick\";\n// import Card from 'react-bootstrap/Card';\n// import Button from 'react-bootstrap/Button';\n// const Sliders = ()=>{\n//     const settings = {\n//         lazyload: true,\n//         dots: true,\n//         infinite: true,\n//         speed: 500,\n//         slidesToShow: 3,\n//         slidesToScroll: 1, \n//         initialSlide: 2,\n//         autoplay: true,\n//         speed: 2000, \n//         autoplaySpeed: 2000, \n//         ccsEase: \"linear\"\n//       };\n//     const posts = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n//     const style={\n//         width: \"20rem\"\n//         };\n//     return (\n//         <div className = \"container\">\n//             <div style = {{marginTop: \"20px\"}}>\n//                 <Slider {...settings}>\n//                     {posts.map((index)=>{\n//                         return (\n//                             <div> \n//                                 <Card style={style}>\n//                                     <Card.Img variant=\"top\" src=\"./assets/download.svg\" />\n//                                     <Card.Body>\n//                                         <Card.Title>Podcast Title{index}</Card.Title>\n//                                         <Card.Subtitle>Author</Card.Subtitle>\n//                                         <Card.Text>\n//                                             Description text for the podcast. \n//                                         </Card.Text>\n//                                         <Button variant=\"primary\">Listen</Button>\n//                                         <Button variant=\"primary\">Follow</Button>\n//                                     </Card.Body>\n//                                 </Card>\n//                             </div>\n//                         );\n//                     })}      \n//                 </Slider>\n//             </div>\n//         </div>\n//     );\n// }\n// export default Sliders; \n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CarouselItem\");\n$RefreshReg$(_c2, \"PodcastCarousel\");","map":{"version":3,"names":["Carousel","React","useState","CarouselItem","children","width","PodcastCarousel","activeIndex","setActiveIndex","updateIndex","newIndex","Children","count","transform","map","child","index","cloneElement"],"sources":["/Users/emmafields/Documents/Coding/CFG_Degree/Specialisation/project/fullstack-flamingos/squeeze/src/components/CarouselHome/Carousel.js"],"sourcesContent":["import { Carousel } from 'bootstrap';\nimport React from 'react'; \nimport './Carousel.css';\nimport { useState } from 'react';\n\nexport const CarouselItem = ({children, width}) => {\n\n    return (\n        <div className='carousel-item' style={{width: width}}>\n            {children}\n        </div>\n    )\n\n};\n\nfunction PodcastCarousel({children}){\n\n    const [activeIndex, setActiveIndex] = useState(0);\n\n    const updateIndex = (newIndex) => {\n        if (newIndex < 0) {\n            newIndex = 0;\n        } else if (newIndex >= React.Children.count(children)) {\n            newIndex = React.Children.count(children) - 1;\n        }\n\n        setActiveIndex(newIndex);\n    };\n\n    return (\n        <div className='carousel'>\n\n            <div className='inner' style={{transform: `translateX(-${activeIndex * 100}%)`}}>\n                {React.Children.map(children, (child, index) => {\n                    return React.cloneElement(child, { width: \"33%\"});\n                })}\n            </div>\n            \n            <div className='indicators'>\n                <button onClick = {() => {\n                    updateIndex(activeIndex - 1);\n                }}>Previous</button>\n\n                {React.Children.map(children, (child, index) => {\n                    return (\n                        <button onClick={() => {\n                            updateIndex(index);\n                        }}>\n                            {index + 1}\n                        </button>\n                    )\n                })}\n\n                <button onClick = {() => {\n                    updateIndex(activeIndex + 1);\n                }}>Next</button>\n            </div>\n\n        </div>\n    );\n\n\n};\n\nexport default PodcastCarousel;\n\n\n// const Sliders = ()=>{\n//     const settings = {\n//         lazyload: true,\n//         dots: true,\n//         infinite: true,\n//         speed: 500,\n//         slidesToShow: 3,\n//         slidesToScroll: 1, \n//         initialSlide: 2,\n//         autoplay: true,\n//         speed: 2000, \n//         autoplaySpeed: 2000, \n//         ccsEase: \"linear\"\n//       };\n\n//     const posts = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n//     const style={\n//         width: \"20rem\"\n//         };\n\n    \n//     return (\n//         <div className = \"container\">\n//             <div style = {{marginTop: \"20px\"}}>\n//                 <Slider {...settings}>\n//                     {posts.map((index)=>{\n//                         return (\n//                             <div> \n//                                 <Card style={style}>\n//                                     <Card.Img variant=\"top\" src=\"./assets/download.svg\" />\n//                                     <Card.Body>\n//                                         <Card.Title>Podcast Title{index}</Card.Title>\n//                                         <Card.Subtitle>Author</Card.Subtitle>\n//                                         <Card.Text>\n//                                             Description text for the podcast. \n//                                         </Card.Text>\n//                                         <Button variant=\"primary\">Listen</Button>\n//                                         <Button variant=\"primary\">Follow</Button>\n//                                     </Card.Body>\n//                                 </Card>\n//                             </div>\n//                         );\n//                     })}      \n//                 </Slider>\n//             </div>\n//         </div>\n//     );\n\n    \n// }\n\n// export default Sliders; \n\n// import React from 'react'; \n// import Slider from \"react-slick\";\n// import Card from 'react-bootstrap/Card';\n// import Button from 'react-bootstrap/Button';\n\n\n// const Sliders = ()=>{\n//     const settings = {\n//         lazyload: true,\n//         dots: true,\n//         infinite: true,\n//         speed: 500,\n//         slidesToShow: 3,\n//         slidesToScroll: 1, \n//         initialSlide: 2,\n//         autoplay: true,\n//         speed: 2000, \n//         autoplaySpeed: 2000, \n//         ccsEase: \"linear\"\n//       };\n\n//     const posts = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n//     const style={\n//         width: \"20rem\"\n//         };\n\n    \n//     return (\n//         <div className = \"container\">\n//             <div style = {{marginTop: \"20px\"}}>\n//                 <Slider {...settings}>\n//                     {posts.map((index)=>{\n//                         return (\n//                             <div> \n//                                 <Card style={style}>\n//                                     <Card.Img variant=\"top\" src=\"./assets/download.svg\" />\n//                                     <Card.Body>\n//                                         <Card.Title>Podcast Title{index}</Card.Title>\n//                                         <Card.Subtitle>Author</Card.Subtitle>\n//                                         <Card.Text>\n//                                             Description text for the podcast. \n//                                         </Card.Text>\n//                                         <Button variant=\"primary\">Listen</Button>\n//                                         <Button variant=\"primary\">Follow</Button>\n//                                     </Card.Body>\n//                                 </Card>\n//                             </div>\n//                         );\n//                     })}      \n//                 </Slider>\n//             </div>\n//         </div>\n//     );\n\n    \n// }\n\n// export default Sliders; "],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,WAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,OAAO,MAAMC,YAAY,GAAG,QAAuB;EAAA,IAAtB;IAACC,QAAD;IAAWC;EAAX,CAAsB;EAE/C,oBACI;IAAK,SAAS,EAAC,eAAf;IAA+B,KAAK,EAAE;MAACA,KAAK,EAAEA;IAAR,CAAtC;IAAA,UACKD;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CARM;KAAMD,Y;;AAUb,SAASG,eAAT,QAAoC;EAAA;;EAAA,IAAX;IAACF;EAAD,CAAW;EAEhC,MAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,CAAD,CAA9C;;EAEA,MAAMO,WAAW,GAAIC,QAAD,IAAc;IAC9B,IAAIA,QAAQ,GAAG,CAAf,EAAkB;MACdA,QAAQ,GAAG,CAAX;IACH,CAFD,MAEO,IAAIA,QAAQ,IAAIT,KAAK,CAACU,QAAN,CAAeC,KAAf,CAAqBR,QAArB,CAAhB,EAAgD;MACnDM,QAAQ,GAAGT,KAAK,CAACU,QAAN,CAAeC,KAAf,CAAqBR,QAArB,IAAiC,CAA5C;IACH;;IAEDI,cAAc,CAACE,QAAD,CAAd;EACH,CARD;;EAUA,oBACI;IAAK,SAAS,EAAC,UAAf;IAAA,wBAEI;MAAK,SAAS,EAAC,OAAf;MAAuB,KAAK,EAAE;QAACG,SAAS,EAAG,eAAcN,WAAW,GAAG,GAAI;MAA7C,CAA9B;MAAA,UACKN,KAAK,CAACU,QAAN,CAAeG,GAAf,CAAmBV,QAAnB,EAA6B,CAACW,KAAD,EAAQC,KAAR,KAAkB;QAC5C,oBAAOf,KAAK,CAACgB,YAAN,CAAmBF,KAAnB,EAA0B;UAAEV,KAAK,EAAE;QAAT,CAA1B,CAAP;MACH,CAFA;IADL;MAAA;MAAA;MAAA;IAAA,QAFJ,eAQI;MAAK,SAAS,EAAC,YAAf;MAAA,wBACI;QAAQ,OAAO,EAAI,MAAM;UACrBI,WAAW,CAACF,WAAW,GAAG,CAAf,CAAX;QACH,CAFD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAKKN,KAAK,CAACU,QAAN,CAAeG,GAAf,CAAmBV,QAAnB,EAA6B,CAACW,KAAD,EAAQC,KAAR,KAAkB;QAC5C,oBACI;UAAQ,OAAO,EAAE,MAAM;YACnBP,WAAW,CAACO,KAAD,CAAX;UACH,CAFD;UAAA,UAGKA,KAAK,GAAG;QAHb;UAAA;UAAA;UAAA;QAAA,QADJ;MAOH,CARA,CALL,eAeI;QAAQ,OAAO,EAAI,MAAM;UACrBP,WAAW,CAACF,WAAW,GAAG,CAAf,CAAX;QACH,CAFD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAfJ;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiCH;;GA/CQD,e;;MAAAA,e;AA+CR;AAED,eAAeA,eAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA"},"metadata":{},"sourceType":"module"}