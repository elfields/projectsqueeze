{"ast":null,"code":"var _jsxFileName = \"/Users/emmafields/Documents/Coding/CFG_Degree/Specialisation/project/fullstack-flamingos/squeeze/src/components/GenreButton/GenreButton.jsx\",\n    _s = $RefreshSig$();\n\nimport './GenreButton.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GenreButton(props) {\n  _s();\n\n  const [isActive, setIsActive] = useState(false); // Obtaining Genre ID from buttons once selected to feed into API\n\n  const handleClick = () => {\n    setIsActive(current => !current);\n    props.onClick(props.genrebuttonid, isActive);\n  };\n\n  return (\n    /*#__PURE__*/\n    // button title is passed via the Genre Modal\n    _jsxDEV(\"button\", {\n      id: props.id,\n      className: `genre-button ${isActive ? `genre-button--checked` : ``}`,\n      onClick: handleClick,\n      children: props.genrebuttontitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(GenreButton, \"OFRYOMGmWDzfQ4dzLF00ag1mHo0=\");\n\n_c = GenreButton;\nexport default GenreButton; // Part of Toggle All and disable buttons\n// import './GenreButton.css';\n// function GenreButton(props) {\n//       return (\n//         <>\n//           <button id={ props.id } disabled={props.isMaxed} className={`genrebutton ${props.isSelected(props.genrebuttontitle) ? `genrebutton--checked` : ``}`}\n//           onClick={() => props.toggle(props.genrebuttontitle)}>{ props.genrebuttontitle }</button>\n//         </>\n//       );\n// }\n// export default GenreButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenreButton\");","map":{"version":3,"names":["React","useState","GenreButton","props","isActive","setIsActive","handleClick","current","onClick","genrebuttonid","id","genrebuttontitle"],"sources":["/Users/emmafields/Documents/Coding/CFG_Degree/Specialisation/project/fullstack-flamingos/squeeze/src/components/GenreButton/GenreButton.jsx"],"sourcesContent":["import './GenreButton.css';\nimport React, { useState } from 'react';\n\n\nfunction GenreButton(props) {\n    const [isActive, setIsActive] = useState(false);\n\n    // Obtaining Genre ID from buttons once selected to feed into API\n    const handleClick = () => {\n        setIsActive(current => !current)\n        props.onClick(props.genrebuttonid, isActive);\n    };\n\n    return (\n        \n        // button title is passed via the Genre Modal\n        <button id={ props.id } \n            className={`genre-button ${isActive ? `genre-button--checked` : ``}`} \n            onClick={handleClick}\n        >\n                \n            { props.genrebuttontitle }\n        </button>\n        \n      );\n}\n\nexport default GenreButton;\n\n\n\n\n\n// Part of Toggle All and disable buttons\n\n// import './GenreButton.css';\n\n// function GenreButton(props) {\n//       return (\n//         <>\n//           <button id={ props.id } disabled={props.isMaxed} className={`genrebutton ${props.isSelected(props.genrebuttontitle) ? `genrebutton--checked` : ``}`}\n//           onClick={() => props.toggle(props.genrebuttontitle)}>{ props.genrebuttontitle }</button>\n//         </>\n//       );\n// }\n\n// export default GenreButton;"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;EAAA;;EACxB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC,CADwB,CAGxB;;EACA,MAAMK,WAAW,GAAG,MAAM;IACtBD,WAAW,CAACE,OAAO,IAAI,CAACA,OAAb,CAAX;IACAJ,KAAK,CAACK,OAAN,CAAcL,KAAK,CAACM,aAApB,EAAmCL,QAAnC;EACH,CAHD;;EAKA;IAAA;IAEI;IACA;MAAQ,EAAE,EAAGD,KAAK,CAACO,EAAnB;MACI,SAAS,EAAG,gBAAeN,QAAQ,GAAI,uBAAJ,GAA8B,EAAE,EADvE;MAEI,OAAO,EAAEE,WAFb;MAAA,UAKMH,KAAK,CAACQ;IALZ;MAAA;MAAA;MAAA;IAAA;EAHJ;AAYH;;GArBQT,W;;KAAAA,W;AAuBT,eAAeA,WAAf,C,CAMA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}